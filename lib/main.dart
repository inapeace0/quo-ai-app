import 'package:flutter/material.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:quotionai/aboutme.dart';
import 'package:quotionai/businessquote.dart';
import 'package:quotionai/generated/l10n.dart';
import 'package:quotionai/freequotionresponse.dart';
import 'package:quotionai/paidquotionresponse.dart';
import 'package:quotionai/upgrading.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  bool _isLoading = true;
  Locale _locale = S.delegate.supportedLocales.first;

  @override
  void initState() {
    super.initState();

    WidgetsBinding.instance.addPostFrameCallback((_) {
      initializeDio();
    });
  }

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    if (_isLoading) {
      return const Center(
        child: CircularProgressIndicator(),
      );
    }
    return ScreenUtilInit(
        useInheritedMediaQuery: true,
        designSize: const Size(428, 926),
        minTextAdapt: true,
        splitScreenMode: true,
        builder: (context, child) {
          return MaterialApp(
            title: 'Quotion AI',
            localizationsDelegates: const [
              S.delegate, // Generated by intl
              GlobalMaterialLocalizations.delegate,
              GlobalWidgetsLocalizations.delegate,
              GlobalCupertinoLocalizations.delegate,
            ],
            locale: _locale,
            supportedLocales: S.delegate.supportedLocales,
            theme: ThemeData(
              colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
              useMaterial3: true,
            ),
            initialRoute: '/',
            routes: {
              '/': (context) => const AboutMeWidget(),
              '/businessquote': (context) => const BusinessQuote(),
              '/freequotionresponse': (context) => const FreeQuotionResponse(),
              '/paidquotionresponse': (context) => const PaidQuotionResponse(),
              '/upgrade': (context) => const Upgrading(),
            },
          );
        });
  }

  Future<void> initializeDio() async {
    try {
      _locale = const Locale('en');
      _isLoading = false;
      setState(() {});
    } catch (e) {
      debugPrint(e.toString());
    }
  }
}
